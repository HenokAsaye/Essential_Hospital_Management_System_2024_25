generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int             @id @default(autoincrement())
  name           String
  email          String          @unique
  password       String
  role           Role
  age            Int?
  gender         String?
  contact        String?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  admin          Admin?
  doctorSessions Appointment[]   @relation("DoctorAppointments")
  appointments   Appointment[]   @relation("PatientAppointments")
  doctor         Doctor?
  doctorRequests DoctorRequest[]
  patient        Patient?
}

model Admin {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
}

model Patient {
  id             Int      @id @default(autoincrement())
  userId         Int      @unique
  medicalHistory Json?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  User           User     @relation(fields: [userId], references: [id])
}

model Doctor {
  id           Int      @id @default(autoincrement())
  userId       Int      @unique
  availability String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  User         User     @relation(fields: [userId], references: [id])

}

model DoctorRequest {
  id        Int           @id @default(autoincrement())
  userId    Int
  status    requestStatus
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  User      User          @relation(fields: [userId], references: [id])
}

model Appointment {
  id        Int      @id @default(autoincrement())
  patientId Int
  doctorId  Int
  time      DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  date      DateTime
  Doctor    User     @relation("DoctorAppointments", fields: [doctorId], references: [id])
  Patient   User     @relation("PatientAppointments", fields: [patientId], references: [id])
}

enum Role {
  Patient
  Admin
  Doctor
}

enum requestStatus {
  PENDING
  APPROVED
  REJECTED
}
